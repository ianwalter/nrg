generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account_roles {
  id         String   @id @db.VarChar(255)
  account_id String   @db.VarChar(255)
  role_id    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  accounts   accounts @relation(fields: [account_id], references: [id])
  roles      roles    @relation(fields: [role_id], references: [id])

  @@index([account_id], name: "accountroles_accountid_index")
}

model accounts {
  id             String          @id @db.VarChar(255)
  first_name     String          @db.VarChar(255)
  last_name      String          @db.VarChar(255)
  email          String          @unique @db.VarChar(255)
  password       String          @db.VarChar(255)
  email_verified Boolean         @default(false)
  enabled        Boolean         @default(true)
  created_at     DateTime        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime        @default(now()) @db.Timestamptz(6)
  account_roles  account_roles[]
  tokens         tokens[]

  @@index([email], name: "accounts_email_index")
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?
}

model roles {
  id            String          @id @db.VarChar(255)
  name          String          @db.VarChar(255)
  scope         String          @default("app") @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  account_roles account_roles[]
}

model tokens {
  id         String   @id @db.VarChar(255)
  value      String   @unique @db.VarChar(255)
  account_id String   @db.VarChar(255)
  type       String
  email      String   @db.VarChar(255)
  expires_at DateTime @db.Timestamptz(6)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  accounts   accounts @relation(fields: [account_id], references: [id])

  @@index([account_id], name: "tokens_accountid_index")
  @@index([email], name: "tokens_email_index")
  @@index([type], name: "tokens_type_index")
}
